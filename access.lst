Turbo Assembler	 Version 4.1	    03/17/23 21:49:02	    Page 1
access.asm



      1	0000				     .model  small
      2					     .8086
      3	0000				     .code
      4	      =0002		     A9WControlRW	     equ     0002h
      5				       A9RControl record     A9MFrc2Is512KHzOr1KHz:1,A9MFrc2PreScale:1,\
      6							     A9MFrc1Is512KHzOr1Hz:1,A9MFrc1PreScale:1,\
      7							     A9MSoundEnable:1,A9MLcdEnable:1,\
      8							     A9MLowBatNMIEnable:1,A9MDoorNMIEnable:1,\
      9							     A9MZeroIsGrayMode:1,A9MArmStandBy:1,\
     10							     A9MDisableDMADivide:1,A9MRamDeviceSize:2,\
     11							     A9MDisableMemWait:1,A9MDisableIoWait:1,\
     12							     A9MDisableClockDivide:1
     13	      =0000		       A9VRam256KBits	     equ     (0	shl A9MRamDeviceSize)
     14	      =0008		       A9VRam1MBits	     equ     (1	shl A9MRamDeviceSize)
     15	      =0010		       A9VRam4MBits	     equ     (2	shl A9MRamDeviceSize)
     16	      =0018		       A9VRam16MBits	     equ     (3	shl A9MRamDeviceSize)
     17	      =0018		       A9XRamDeviceSizeMask  equ     (3	shl A9MRamDeviceSize)
     18	      =0004		     A9WStatusR		     equ     0004h
     19				       A9RStatus record	     A9MCold:1,A9MPowerFail:1,\
     20							     A9MReset:1,A9MNoBattery:1,\
     21							     A9MFifoFull:1,A9MSlaveOverrun:1,\
     22							     A9MSlaveControlFrame:1,A9MSlaveDataValid:1,\
     23							     A9MKeyboard:1,A9MSlaveClock:1,\
     24							     A9MMainsPresent:1,A9MDoorSwitch:1,\
     25							     A9MLowBatNMI:1,A9MDoorNMI:1,\
     26							     A9MProtectedModeNMI:1,A9MWatchDogNMI:1
     27	      =0008		       A9MLcdType	     equ     8
     28	      =0F00		       A9XLcdType	     equ     0000111100000000b
     29	      =0004		     A9WLcdSizeW	     equ     0004h
     30				       A9RLcdSize record     A9MLcdLineLength:5,A9MLcdNumberOfPixels:11
     31	      =0006		     A9WLcdControlW	     equ     0006h
     32				       A9RLcdControl record  A9MLcdMode:2,A9MLcdACLineRate:5,A9MLcdPixelRate:5
     33	      =0000		       A9VSinglePage1	     equ     (0	shl A9MLcdMode)
     34	      =0400		       A9VSinglePage2	     equ     (1	shl A9MLcdMode)
     35	      =0800		       A9VSinglePage1And2    equ     (2	shl A9MLcdMode)
     36	      =0C00		       A9VDualPage1And2	     equ     (3	shl A9MLcdMode)
     37	      =0006		     A9BInterruptStatusR     equ     0006h
     38	      =0008		     A9BInterruptMaskRW	     equ     0008h
     39				       A9RInterrupts record  A9MFrc2:1,A9MFrc1:1,\
     40							     A9MExpIntB:1,A9MExpIntA:1,A9MExpIntC:1,\
     41							     A9MSlave:1,A9MTimer:1,A9MSound:1
     42	      =0009		     A9BNmiClearW	     equ     0009h
     43	      =000A		     A9BNonSpecificEoiW	     equ     000ah
     44	      =000B		     A9BStartFlagClearW	     equ     000bh
     45	      =000C		     A9BTimerEoiW	     equ     000ch
     46	      =000D		     A9BSerialSlaveEoiW	     equ     000dh
     47	      =000E		     A9BFrc1EoiW	     equ     000eh
     48	      =000F		     A9BFrc2EoiW	     equ     000fh
     49	      =0010		     A9WResetWatchDogW	     equ     0010h
     50	      =0012		     A9WFrc1DataRW	     equ     0012h
     51	      =0014		     A9BProtectionOnW	     equ     0014h
     52	      =0014		     A9BProtectionOffR	     equ     0014h
     53	      =0015		     A9BProtectionOffW	     equ     0015h
     54	      =0016		     A9WProtectionUpperW     equ     0016h
     55	      =0018		     A9WProtectionLowerW     equ     0018h
     56	      =001A		     A9BSoundDataRW	     equ     001ah
     57	      =001C		     A9BSoundEoiW	     equ     001ch
Turbo Assembler	 Version 4.1	    03/17/23 21:49:02	    Page 2
access.asm



     58	      =001E		     A9WFrc2DataRW	     equ     001eh
     59	      =0020		     A9WPortABDataRW	     equ     0020h
     60				       A9RPortABData record  A9MKeyIdX2:1,A9MNiCdDetect:1,\
     61							     A9MBatLevel2:1,A9MBatLevel1:1,A9MLiBatLevel:1,\
     62							     A9MKeyIdX1:1,A9MKeyIdX0:0,A9MKeyRowX8:1,\
     63							     A9MCradle:1,A9MKeyRowX:7
     64	      =0020		     A9BPortADataRW	     equ     0020h
     65	      =0021		     A9BPortBDataRW	     equ     0021h
     66	      =0022		     A9WPortABDDRRW	     equ     0022h
     67	      =0000		       A9VPortABDDR	     equ     0000000000000000b
     68	      =0022		     A9BPortADDRRW	     equ     0022h
     69	      =0023		     A9BPortBDDRRW	     equ     0023h
     70	      =0024		     A9WPortCDDataRW	     equ     0024h
     71				       A9RPortCDData record  A9MVccPacksEnable:1,A9MCodecEnable:1,\
     72							     A9MVccLcdEnable:1,A9MLcdPanelEnable:1,\
     73							     A9MLcdContrast:4,A9MVolume:2,\
     74							     A9MReproEnable:1,A9MAltDoorNMIEnable:1,\
     75							     A9MAmplifierEnable:1,A9MKeyIdEnable:1,\
     76							     A9MBuzVolX:1,A9MBacklightEnableX:1
     77	      =00C0		       A9VVolumeLow	     equ     (mask A9MVolume)
     78	      =0F00		       A9VPortCDData	     equ     0000111100000000b
     79	      =0F00		       A9VPortCDDDR	     equ     not (1111000011111111b)
     80	      =0024		     A9BPortCDataRW	     equ     0024h
     81	      =0025		     A9BPortDDataRW	     equ     0025h
     82	      =0026		     A9WPortCDDDRRW	     equ     0026h
     83	      =0026		     A9BPortCDDRRW	     equ     0026h
     84	      =0027		     A9BPortDDDRRW	     equ     0027h
     85	      =0028		     A9BPageSelect6000RW     equ     0028h
     86	      =0029		     A9BPageSelect7000RW     equ     0029h
     87	      =002A		     A9BPageSelect8000RW     equ     002ah
     88	      =002B		     A9BPageSelect9000RW     equ     002bh
     89				       A9RControlExtraRW record	A9MSlaveIntEnable:1,A9MClkDiv:2,\
     90							     A9MClockEnable5:1,A9MClockEnable4:1,\
     91							     A9MClockEnable3:1,A9MClockEnable2:1,\
     92							     A9MClockEnable1:1,A9MSoundDir:1,\
     93							     A9MExonDisable:1,A9MBuzzFromFrc1OrTog:1,\
     94							     A9MBuzzTog:1,A9MKeyCol:4
     95	      =0000		       A9VKeyColHigh	     equ     0
     96	      =0001		       A9VKeyColLow	     equ     1
     97	      =0008		       A9VKeyCol0	     equ     8
     98	      =6000		       A9VClkDiv1	     equ     (3	shl A9MClkDiv)
     99	      =4000		       A9VClkDiv2	     equ     (2	shl A9MClkDiv)
    100	      =2000		       A9VClkDiv3	     equ     (1	shl A9MClkDiv)
    101	      =0000		       A9VClkDiv4	     equ     (0	shl A9MClkDiv)
    102	      =002E		     A9WPumpControlRW	     equ     002eh
    103				       A9RPumpControl record A9MVhPumpDc:4,A9MVhPumpBat:4,\
    104							     A9MLcdPump:4,A9MPump2:4
    105	      =0E00		       A9VVhPumpBat	     equ     (14 shl A9MVhPumpBat)
    106	      =0400		       A9VVhPumpBatSoft	     equ     (4	shl A9MVhPumpBat)
    107	      =0800		       A9VVhPumpBatMedium    equ     (8	shl A9MVhPumpBat)
    108	      =2000		       A9VVhPumpDC	     equ     (2	shl A9MVhPumpDc)
    109	      =1000		       A9VVhPumpDCSoft	     equ     (1	shl A9MVhPumpDc)
    110	      =0070		       A9VLcdPump	     equ     (7	shl A9MLcdPump)
    111	      =0010		       A9VLcdPumpSoft	     equ     (1	shl A9MLcdPump)
    112	      =000F		       A9VPacksPumpSoft	     equ     (15 shl A9MPump2)
    113	      =0064		       A9VVhPumpDelay	     equ     100     ; Milliseconds
    114	      =0005		       A9VLcdPumpDelay	     equ     5	     ; Milliseconds
Turbo Assembler	 Version 4.1	    03/17/23 21:49:02	    Page 3
access.asm



    115	      =0001		       A9VCC3OnDelay	     equ     1	     ; Milliseconds
    116	      =0014		       A9VCCPacksDelay	     equ     20	     ; Milliseconds
    117	      =000A		       A9VCC2Delay	     equ     10	     ; Milliseconds
    118	      =0080		     A9WRtcLSWRW	     equ     0080h
    119	      =0082		     A9WRtcMSWRW	     equ     0082h
    120	      =0084		     A9WNullFrameW	     equ     0084h
    121	      =0088		     A9BSlaveDataR	     equ     0088h
    122	      =008A		     A9BSerialDataRW	     equ     008ah
    123	      =008C		     A9BSerialControlW	     equ     008ch
    124	      =008E		     A9BChannelSelectRW	     equ     008eh
    125				       A9RChannelSelect	record A9MMultiplexEnable:1,A9MSerialClockRate:2,\
    126							     A9MPack5Enable:1,A9MPack4Enable:1,\
    127							     A9MPack3Enable:1,A9MPack2Enable:1,\
    128							     A9MPack1Enable:1
    129	      =0000		       A9VSClkRateMedium     equ     (0	shl A9MSerialClockRate)
    130	      =0020		       A9VSClkRateSpecial    equ     (1	shl A9MSerialClockRate)
    131	      =0040		       A9VSClkRateSlow	     equ     (2	shl A9MSerialClockRate)
    132	      =0060		       A9VSClkRateFast	     equ     (3	shl A9MSerialClockRate)
    133				     ;
    134				     ; Asic9 Dependent constants
    135				     ;
    136				     ResetWatchDog	     equ     A9WResetWatchDogW
    137	      =0001		     SelectChannel1	     equ     (mask A9MPack1Enable)
    138	      =0002		     SelectChannel2	     equ     (mask A9MPack2Enable)
    139	      =0004		     SelectChannel3	     equ     (mask A9MPack3Enable)
    140	      =0008		     SelectChannel4	     equ     (mask A9MPack4Enable)
    141	      =0010		     SelectChannel5	     equ     (mask A9MPack5Enable)
    142				     ;
    143					     public  _access
    144					     public  _memcpy
    145					     public  _getpsel0
    146					     public  _setpsel0
    147					     public  _getpsel1
    148					     public  _setpsel1
    149					     public  _getpsel2
    150					     public  _setpsel2
    151					     public  _memcpypsel0
    152					     public  _memcpypsel1
    153					     public  _memcpypsel2
    154					     public  _getcs
    155					     public  _getds
    156					     public  _getA9RCtrl
    157					     public  _getA9RStat
    158
    159	0000			     _getA9RCtrl proc near
    160	0000  FA			     cli
    161	0001  51			     push  cx
    162
    163	0002  32 C9			     xor   cl,cl
    164	0004  36: 86 0E	0020		     xchg  cl,[ss:20h]
    165	0009  E6 15			     out   A9BProtectionOffW,al	  ; Disable memory protection (any value will do)
    166
    167	000B  E5 02			     in	   ax,A9WControlRW	  ; A9WControlRW
    168
    169	000D  84 C9			     test  cl,cl
    170	000F  74 02			     jz	   dontundo_a9rctrl
    171	0011  E6 14			     out   A9BProtectionOnW,al	  ; Enable memory protection (any value	will do)
Turbo Assembler	 Version 4.1	    03/17/23 21:49:02	    Page 4
access.asm



    172
    173	0013			     dontundo_a9rctrl:
    174	0013  59			     pop   cx
    175	0014  FB			     sti
    176	0015  C3			     retn
    177	0016			     _getA9RCtrl endp
    178
    179	0016			     _getA9RStat proc near
    180	0016  FA			     cli
    181	0017  51			     push  cx
    182
    183	0018  32 C9			     xor   cl,cl
    184	001A  36: 86 0E	0020		     xchg  cl,[ss:20h]
    185	001F  E6 15			     out   A9BProtectionOffW,al	  ; Disable memory protection (any value will do)
    186
    187	0021  E5 04			     in	   ax,A9WStatusR
    188
    189	0023  84 C9			     test  cl,cl
    190	0025  74 02			     jz	   dontundo_a9rstat
    191	0027  E6 14			     out   A9BProtectionOnW,al	  ; Enable memory protection (any value	will do)
    192
    193	0029			     dontundo_a9rstat:
    194	0029  59			     pop   cx
    195	002A  FB			     sti
    196	002B  C3			     retn
    197	002C			     _getA9RStat endp
    198
    199
    200	002C			     _getcs  proc    near
    201	002C  0E			     push    cs
    202	002D  58			     pop     ax
    203	002E  C3			     retn
    204	002F			     _getcs  endp
    205
    206	002F			     _getds  proc    near
    207	002F  1E			     push    ds
    208	0030  58			     pop     ax
    209	0031  C3			     retn
    210	0032			     _getds  endp
    211
    212
    213				     ; Thanks to Patrick for memcpy :-)
    214				     ; Thanks to Simon for the values of PSEL0..3 ;-)
    215
    216
    217	0032			     _getpsel0	     proc    near
    218
    219	0032  FA			     cli
    220
    221	0033  51			     push    cx
    222	0034  2A C9			     sub     cl,cl
    223	0036  36: 86 0E	0020		     xchg    cl,[ss:20h]
    224	003B  E6 15			     out     15h,al  ; A9BProtectionOffW
    225
    226	003D  E6 15			     out     15h,al  ; disable memory protection
    227	003F  E4 28			     in	     al,28h  ; PSEL0
    228	0041  25 00FF			     and     ax,00ffh
Turbo Assembler	 Version 4.1	    03/17/23 21:49:02	    Page 5
access.asm



    229
    230	0044  84 C9			     test    cl,cl
    231	0046  74 02			     jz	     dontundo_gp0
    232	0048  E6 14			     out     14h,al  ; A9BProtectionOnW
    233	004A			     dontundo_gp0:
    234	004A  59			     pop     cx
    235	004B  FB			     sti
    236	004C  C3			     retn
    237	004D			     _getpsel0	     endp
    238
    239	004D			     _setpsel0	     proc    near
    240	004D  FA			     cli
    241
    242	004E  51			     push    cx
    243	004F  2A C9			     sub     cl,cl
    244	0051  36: 86 0E	0020		     xchg    cl,[ss:20h]
    245	0056  E6 15			     out     15h,al  ; A9BProtectionOffW
    246
    247	0058  25 00FF			     and     ax,00ffh
    248	005B  E6 28			     out     28h,al  ; A9BPageSelect6000
    249
    250	005D  84 C9			     test    cl,cl
    251	005F  74 02			     jz	     dontundo_sp0
    252	0061  E6 14			     out     14h,al  ; A9BProtectionOnW
    253	0063			     dontundo_sp0:
    254	0063  59			     pop     cx
    255
    256	0064  FB			     sti
    257	0065  C3			     retn
    258	0066			     _setpsel0	     endp
    259
    260
    261	0066			     _getpsel1	     proc    near
    262
    263	0066  FA			     cli
    264
    265	0067  51			     push    cx
    266	0068  2A C9			     sub     cl,cl
    267	006A  36: 86 0E	0020		     xchg    cl,[ss:20h]
    268	006F  E6 15			     out     15h,al  ; A9BProtectionOffW
    269
    270	0071  E6 15			     out     15h,al  ; disable memory protection
    271	0073  E4 28			     in	     al,28h  ; PSEL0
    272	0075  25 00FF			     and     ax,00ffh
    273
    274	0078  84 C9			     test    cl,cl
    275	007A  74 02			     jz	     dontundo_gp1
    276	007C  E6 14			     out     14h,al  ; A9BProtectionOnW
    277	007E			     dontundo_gp1:
    278	007E  59			     pop     cx
    279	007F  FB			     sti
    280	0080  C3			     retn
    281	0081			     _getpsel1	     endp
    282
    283	0081			     _setpsel1	     proc    near
    284	0081  FA			     cli
    285
Turbo Assembler	 Version 4.1	    03/17/23 21:49:02	    Page 6
access.asm



    286	0082  51			     push    cx
    287	0083  2A C9			     sub     cl,cl
    288	0085  36: 86 0E	0020		     xchg    cl,[ss:20h]
    289	008A  E6 15			     out     15h,al  ; A9BProtectionOffW
    290
    291	008C  25 00FF			     and     ax,00ffh
    292	008F  E6 28			     out     28h,al  ; A9BPageSelect6000
    293
    294	0091  84 C9			     test    cl,cl
    295	0093  74 02			     jz	     dontundo_sp1
    296	0095  E6 14			     out     14h,al  ; A9BProtectionOnW
    297	0097			     dontundo_sp1:
    298	0097  59			     pop     cx
    299
    300	0098  FB			     sti
    301	0099  C3			     retn
    302	009A			     _setpsel1	     endp
    303
    304	009A			     _getpsel2	     proc    near
    305
    306	009A  FA			     cli
    307
    308	009B  51			     push    cx
    309	009C  2A C9			     sub     cl,cl
    310	009E  36: 86 0E	0020		     xchg    cl,[ss:20h]
    311	00A3  E6 15			     out     15h,al  ; A9BProtectionOffW
    312
    313	00A5  E6 15			     out     15h,al  ; disable memory protection
    314	00A7  E4 2A			     in	     al,2ah  ; PSEL2
    315	00A9  25 00FF			     and     ax,00ffh
    316
    317	00AC  84 C9			     test    cl,cl
    318	00AE  74 02			     jz	     dontundo_gp2
    319	00B0  E6 14			     out     14h,al  ; A9BProtectionOnW
    320	00B2			     dontundo_gp2:
    321	00B2  59			     pop     cx
    322	00B3  FB			     sti
    323	00B4  C3			     retn
    324	00B5			     _getpsel2	     endp
    325
    326	00B5			     _setpsel2	     proc    near
    327	00B5  FA			     cli
    328
    329	00B6  51			     push    cx
    330	00B7  2A C9			     sub     cl,cl
    331	00B9  36: 86 0E	0020		     xchg    cl,[ss:20h]
    332	00BE  E6 15			     out     15h,al  ; A9BProtectionOffW
    333
    334	00C0  25 00FF			     and     ax,00ffh
    335	00C3  E6 2A			     out     2ah,al  ; A9BPageSelect8000
    336
    337					     ; may need	out 14h,al to re-enable	memory protection?
    338					     ; that's what HwRomBankSet	does after out 0x2b,al (PSEL3)
    339					     ; HwRomBankSet doesn't touch the watchdog,	and HwRomBankGet
    340					     ; doesn't in 0x2b - HwRomBankSet stores whatever it had written
    341					     ; into the	OS data	segment; HwRomBankGet returns this value.
    342					     ; You'd think that	PSELx are write-only, but their	name in	OSSIBO.INC
Turbo Assembler	 Version 4.1	    03/17/23 21:49:02	    Page 7
access.asm



    343					     ; is A9BPageSelectx000RW ...
    344					     ; No, A000:6251 is	an IN AX,2A. A000:61F7 could be	a memory
    345					     ; copy routine. It	does an	out 0fh,al first (???)
    346					     ; 0f = A9BFrc2EoiW
    347					     ; Also A000:63BA routine outs to 18, 16, 2a
    348					     ; 16 = A9WProtectionUpperW, 18 = A9WProtectionLowerW
    349					     ; A000:F971 ins from 2C, ands this	with CF	and outs it to port 10 (?!?)
    350					     ; (A9WResetWatchDogW)
    351					     ; xors that with 10 and outs that to 2C (repeated,	to toggle bit 4)
    352					     ;
    353	00C5  84 C9			     test    cl,cl
    354	00C7  74 02			     jz	     dontundo_sp2
    355	00C9  E6 14			     out     14h,al  ; A9BProtectionOnW
    356	00CB			     dontundo_sp2:
    357	00CB  59			     pop     cx
    358
    359	00CC  FB			     sti
    360	00CD  C3			     retn
    361	00CE			     _setpsel2	     endp
    362				     ;
    363				     ; Here is HwRomBankSet:
    364				     ;>00000000	 1E		   push	ds
    365				     ;>00000001	 53		   push	bx
    366				     ;>00000002	 51		   push	cx
    367				     ;>00000003	 2AC9		   sub cl,cl
    368				     ;>00000005	 36860E2000	   xchg	cl,[ss:0x20]
    369				     ;>0000000A	 BBB004		   mov bx,0x4b0
    370				     ;>0000000D	 8EDB		   mov ds,bx
    371				     ;>0000000F	 E615		   out 0x15,al	     ; A9BProtectionOffW
    372				     ;>00000011	 8B1E0004	   mov bx,[0x400]
    373				     ;>00000015	 8AE0		   mov ah,al
    374				     ;>00000017	 86673D		   xchg	ah,[bx+0x3d]
    375				     ;>0000001A	 E62B		   out 0x2b,al	     ; A9BPageSelect9000RW
    376				     ;>0000001C	 86C4		   xchg	al,ah
    377				     ;>0000001E	 2AE4		   sub ah,ah
    378				     ;>00000020	 36880E2000	   mov [ss:0x20],cl
    379				     ;>00000025	 84C9		   test	cl,cl
    380				     ;>00000027	 7402		   jz 0x2b
    381				     ;>00000029	 E614		   out 0x14,al	     ; A9BProtectionOnW
    382										     ; aka A9BProtectionOffR
    383				     ;>0000002B	 59		   pop cx
    384				     ;>0000002C	 5B		   pop bx
    385				     ;>0000002D	 1F		   pop ds
    386				     ;>0000002E	 CF		   iret
    387
    388				     ; original
    389				     ;_access	     proc    near
    390				     ;
    391				     ;	     push    es
    392				     ;	     push    ax
    393				     ;	     cli
    394				     ;	     pop     es
    395				     ;	     mov     al,es:[bx]
    396				     ;	     pop     es
    397				     ;	     sti
    398				     ;	     retn
    399				     ;_access	     endp
Turbo Assembler	 Version 4.1	    03/17/23 21:49:02	    Page 8
access.asm



    400
    401	00CE			     _access proc    near
    402
    403	00CE  51			     push    cx
    404	00CF  2A C9			     sub     cl,cl
    405	00D1  36: 86 0E	0020		     xchg    cl,[ss:20h]
    406	00D6  E6 15			     out     15h,al  ; A9BProtectionOffW
    407
    408	00D8  06			     push    es
    409	00D9  50			     push    ax
    410	00DA  FA			     cli
    411	00DB  07			     pop     es
    412	00DC  26: 8A 07			     mov     al,es:[bx]
    413	00DF  07			     pop     es
    414
    415	00E0  84 C9			     test    cl,cl
    416	00E2  74 02			     jz	     dontundo
    417	00E4  E6 14			     out     14h,al  ; A9BProtectionOnW
    418	00E6			     dontundo:
    419	00E6  59			     pop     cx
    420	00E7  FB			     sti
    421	00E8  C3			     retn
    422	00E9			     _access endp
    423
    424				     ;	     end _access
    425
    426	00E9			     _memcpy proc    near
    427	00E9  56			     push    si
    428	00EA  57			     push    di	     ; save these
    429	00EB  06			     push    es
    430	00EC  1E			     push    ds
    431	00ED  52			     push    dx
    432	00EE  51			     push    cx
    433	00EF  53			     push    bx
    434	00F0  50			     push    ax
    435
    436	00F1  51			     push    cx	     ; save cx
    437
    438	00F2  B1 04			      mov    cl,4
    439	00F4  D3 E0			      shl    ax,cl   ; ax = segment / 4, so mult by 4
    440
    441	00F6  59			     pop     cx	     ; restore cx, the number of bytes to copy
    442
    443	00F7  53			     push    bx	     ; si=bx = offset to read
    444	00F8  5E			     pop     si
    445
    446	00F9  52			     push    dx	     ; di=dx = destination buffer
    447	00FA  5F			     pop     di
    448
    449				     ; Patrick clears decimal here, not	sure why :-~
    450	00FB  FC			     cld
    451	00FC  FA			     cli
    452
    453	00FD  1E			     push    ds
    454	00FE  07			     pop     es	     ; es=ds = process's normal	ds
    455
    456	00FF  50			     push    ax	     ; ds=ax = source segment
Turbo Assembler	 Version 4.1	    03/17/23 21:49:02	    Page 9
access.asm



    457	0100  1F			     pop     ds
    458
    459	0101  F3> A4			     rep     movsb   ; memcpy(ds:si, es:di, cx)
    460	0103  58			     pop     ax
    461	0104  5B			     pop     bx
    462	0105  59			     pop     cx
    463	0106  5A			     pop     dx
    464	0107  1F			     pop     ds
    465	0108  07			     pop     es
    466	0109  5F			     pop     di	     ; save these
    467	010A  5E			     pop     si
    468
    469	010B  FB			     sti
    470	010C  C3			     retn
    471	010D			     _memcpy endp
    472
    473
    474
    475	010D			     _memcpypsel0    proc    near
    476	010D  56			     push    si
    477	010E  57			     push    di	     ; save these
    478	010F  06			     push    es
    479
    480							     ; save parameters
    481
    482	0110  1E			     push    ds	     ; DEST SEGMENT (PROCESS NORMAL DS)
    483	0111  52			     push    dx	     ; DEST OFFSET
    484	0112  51			     push    cx	     ; LENGTH
    485	0113  53			     push    bx	     ; SOURCE OFFSET
    486	0114  50			     push    ax	     ; PSEL0
    487
    488	0115  53			     push    bx	     ; si=bx = offset to read
    489	0116  5E			     pop     si
    490
    491	0117  52			     push    dx	     ; di=dx = destination buffer offset
    492	0118  5F			     pop     di
    493
    494				     ; Patrick clears decimal here, not	sure why :-~
    495					     ; cld
    496	0119  FA			     cli
    497
    498	011A  1E			     push    ds	     ; es=ds = process's normal	ds
    499	011B  07			     pop     es	     ; (should be this anyway)
    500
    501
    502							     ; setup psel0=al
    503
    504							     ; save old	SS:20 (memory protection status)
    505	011C  51			     push    cx	     ; save count
    506	011D  2A C9			     sub     cl,cl
    507	011F  36: 86 0E	0020		     xchg    cl,[ss:20h]
    508	0124  89 0E 0000r		     mov     ss20,cx
    509	0128  E6 15			     out     15h,al  ; A9BProtectionOffW
    510	012A  59			     pop     cx	     ; restore count
    511
    512	012B  50			     push    ax	     ; save current PSEL2
    513	012C  E4 28			     in	     al,28h  ; A9BPageSelect6000
Turbo Assembler	 Version 4.1	    03/17/23 21:49:02	    Page 10
access.asm



    514	012E  A3 0002r			     mov     oldpsel0,ax
    515	0131  58			     pop     ax
    516
    517							     ; set new PSEL0
    518	0132  25 00FF			     and     ax,00ffh
    519	0135  E6 28			     out     28h,al  ; A9BPageSelect6000
    520
    521
    522	0137  1E			     push    ds	     ; save process DS
    523	0138  50 55 8B EC C7 46	02+	     push    6000h   ; source segment (ds) is always 6000
    524	      6000 5D
    525	0142  1F			     pop     ds
    526	0143  F3> A4			     rep     movsb   ; memcpy(6000:si, es:di, cx)
    527	0145  1F			     pop     ds	     ; restore process DS
    528
    529	0146  50			     push    ax	     ; restore old PSEL0
    530	0147  A1 0002r			     mov     ax,oldpsel0
    531	014A  E6 28			     out     28h,al  ; A9BPageSelect6000
    532	014C  58			     pop     ax
    533
    534
    535	014D  51			     push    cx
    536	014E  8B 0E 0000r		     mov     cx,ss20
    537	0152  84 C9			     test    cl,cl
    538	0154  74 02			     jz	     dontundo_mp0
    539	0156  E6 14			     out     14h,al  ; A9BProtectionOnW
    540	0158			     dontundo_mp0:
    541	0158  59			     pop     cx
    542
    543	0159  58			     pop     ax
    544	015A  5B			     pop     bx
    545	015B  59			     pop     cx
    546	015C  5A			     pop     dx
    547	015D  1F			     pop     ds
    548	015E  07			     pop     es
    549	015F  5F			     pop     di	     ; save these
    550	0160  5E			     pop     si
    551	0161  FB			     sti
    552	0162  C3			     retn
    553	0163			     _memcpypsel0    endp
    554
    555
    556	0163			     _memcpypsel1    proc    near
    557	0163  56			     push    si
    558	0164  57			     push    di	     ; save these
    559	0165  06			     push    es
    560
    561							     ; save parameters
    562
    563	0166  1E			     push    ds	     ; DEST SEGMENT (PROCESS NORMAL DS)
    564	0167  52			     push    dx	     ; DEST OFFSET
    565	0168  51			     push    cx	     ; LENGTH
    566	0169  53			     push    bx	     ; SOURCE OFFSET
    567	016A  50			     push    ax	     ; PSEL1
    568
    569	016B  53			     push    bx	     ; si=bx = offset to read
    570	016C  5E			     pop     si
Turbo Assembler	 Version 4.1	    03/17/23 21:49:02	    Page 11
access.asm



    571
    572	016D  52			     push    dx	     ; di=dx = destination buffer offset
    573	016E  5F			     pop     di
    574
    575				     ; Patrick clears decimal here, not	sure why :-~
    576					     ; cld
    577	016F  FA			     cli
    578
    579	0170  1E			     push    ds	     ; es=ds = process's normal	ds
    580	0171  07			     pop     es	     ; (should be this anyway)
    581
    582
    583							     ; setup psel1=al
    584
    585							     ; save old	SS:20 (memory protection status)
    586	0172  51			     push    cx	     ; save count
    587	0173  2A C9			     sub     cl,cl
    588	0175  36: 86 0E	0020		     xchg    cl,[ss:20h]
    589	017A  89 0E 0000r		     mov     ss20,cx
    590	017E  E6 15			     out     15h,al  ; A9BProtectionOffW
    591	0180  59			     pop     cx	     ; restore count
    592
    593	0181  50			     push    ax	     ; save current PSEL1
    594	0182  E4 29			     in	     al,29h  ; A9BPageSelect7000
    595	0184  A3 0004r			     mov     oldpsel1,ax
    596	0187  58			     pop     ax
    597
    598							     ; set new PSEL1
    599	0188  25 00FF			     and     ax,00ffh
    600	018B  E6 29			     out     29h,al  ; A9BPageSelect7000
    601
    602
    603	018D  1E			     push    ds	     ; save process DS
    604	018E  50 55 8B EC C7 46	02+	     push    7000h   ; source segment (ds) is always 7000
    605	      7000 5D
    606	0198  1F			     pop     ds
    607	0199  F3> A4			     rep     movsb   ; memcpy(7000:si, es:di, cx)
    608	019B  1F			     pop     ds	     ; restore process DS
    609
    610	019C  50			     push    ax	     ; restore old PSEL1
    611	019D  A1 0004r			     mov     ax,oldpsel1
    612	01A0  E6 29			     out     29h,al  ; A9BPageSelect7000
    613	01A2  58			     pop     ax
    614
    615
    616	01A3  51			     push    cx
    617	01A4  8B 0E 0000r		     mov     cx,ss20
    618	01A8  84 C9			     test    cl,cl
    619	01AA  74 02			     jz	     dontundo_mp1
    620	01AC  E6 14			     out     14h,al  ; A9BProtectionOnW
    621	01AE			     dontundo_mp1:
    622	01AE  59			     pop     cx
    623
    624	01AF  58			     pop     ax
    625	01B0  5B			     pop     bx
    626	01B1  59			     pop     cx
    627	01B2  5A			     pop     dx
Turbo Assembler	 Version 4.1	    03/17/23 21:49:02	    Page 12
access.asm



    628	01B3  1F			     pop     ds
    629	01B4  07			     pop     es
    630	01B5  5F			     pop     di	     ; save these
    631	01B6  5E			     pop     si
    632	01B7  FB			     sti
    633	01B8  C3			     retn
    634	01B9			     _memcpypsel1    endp
    635
    636	01B9			     _memcpypsel2    proc    near
    637	01B9  56			     push    si
    638	01BA  57			     push    di	     ; save these
    639	01BB  06			     push    es
    640
    641							     ; save parameters
    642
    643	01BC  1E			     push    ds	     ; DEST SEGMENT (PROCESS NORMAL DS)
    644	01BD  52			     push    dx	     ; DEST OFFSET
    645	01BE  51			     push    cx	     ; LENGTH
    646	01BF  53			     push    bx	     ; SOURCE OFFSET
    647	01C0  50			     push    ax	     ; PSEL2
    648
    649	01C1  53			     push    bx	     ; si=bx = offset to read
    650	01C2  5E			     pop     si
    651
    652	01C3  52			     push    dx	     ; di=dx = destination buffer offset
    653	01C4  5F			     pop     di
    654
    655				     ; Patrick clears decimal here, not	sure why :-~
    656					     ; cld
    657	01C5  FA			     cli
    658
    659	01C6  1E			     push    ds	     ; es=ds = process's normal	ds
    660	01C7  07			     pop     es	     ; (should be this anyway)
    661
    662
    663							     ; setup psel2=al
    664
    665							     ; save old	SS:20 (memory protection status)
    666	01C8  51			     push    cx	     ; save count
    667	01C9  2A C9			     sub     cl,cl
    668	01CB  36: 86 0E	0020		     xchg    cl,[ss:20h]
    669	01D0  89 0E 0000r		     mov     ss20,cx
    670	01D4  E6 15			     out     15h,al  ; A9BProtectionOffW
    671	01D6  59			     pop     cx	     ; restore count
    672
    673	01D7  50			     push    ax	     ; save current PSEL2
    674	01D8  E4 2A			     in	     al,2ah  ; A9BPageSelect8000
    675	01DA  A3 0006r			     mov     oldpsel2,ax
    676	01DD  58			     pop     ax
    677
    678							     ; set new PSEL2
    679	01DE  25 00FF			     and     ax,00ffh
    680	01E1  E6 2A			     out     2ah,al  ; A9BPageSelect8000
    681
    682
    683	01E3  1E			     push    ds	     ; save process DS
    684	01E4  50 55 8B EC C7 46	02+	     push    8000h   ; source segment (ds) is always 8000
Turbo Assembler	 Version 4.1	    03/17/23 21:49:02	    Page 13
access.asm



    685	      8000 5D
    686	01EE  1F			     pop     ds
    687	01EF  F3> A4			     rep     movsb   ; memcpy(8000:si, es:di, cx)
    688	01F1  1F			     pop     ds	     ; restore process DS
    689
    690	01F2  50			     push    ax	     ; restore old PSEL2
    691	01F3  A1 0006r			     mov     ax,oldpsel2
    692	01F6  E6 2A			     out     2ah,al  ; A9BPageSelect8000
    693	01F8  58			     pop     ax
    694
    695
    696	01F9  51			     push    cx
    697	01FA  8B 0E 0000r		     mov     cx,ss20
    698	01FE  84 C9			     test    cl,cl
    699	0200  74 02			     jz	     dontundo_mp2
    700	0202  E6 14			     out     14h,al  ; A9BProtectionOnW
    701	0204			     dontundo_mp2:
    702	0204  59			     pop     cx
    703
    704	0205  58			     pop     ax
    705	0206  5B			     pop     bx
    706	0207  59			     pop     cx
    707	0208  5A			     pop     dx
    708	0209  1F			     pop     ds
    709	020A  07			     pop     es
    710	020B  5F			     pop     di	     ; save these
    711	020C  5E			     pop     si
    712	020D  FB			     sti
    713	020E  C3			     retn
    714	020F			     _memcpypsel2    endp
    715
    716	020F				     .data
    717	0000  0000		     ss20    dw	     0
    718	0002  0000		     oldpsel0 dw     0
    719	0004  0000		     oldpsel1 dw     0
    720	0006  0000		     oldpsel2 dw     0
    721
    722					     end
Turbo Assembler	 Version 4.1	    03/17/23 21:49:02	    Page 14
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/17/23"
??FILENAME			  Text	 "access  "
??TIME				  Text	 "21:49:02"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _DATA
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 ACCESS
@INTERFACE			  Text	 000H
@MODEL				  Text	 2
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
A9BCHANNELSELECTRW		  Number 008E
A9BFRC1EOIW			  Number 000E
A9BFRC2EOIW			  Number 000F
A9BINTERRUPTMASKRW		  Number 0008
A9BINTERRUPTSTATUSR		  Number 0006
A9BNMICLEARW			  Number 0009
A9BNONSPECIFICEOIW		  Number 000A
A9BPAGESELECT6000RW		  Number 0028
A9BPAGESELECT7000RW		  Number 0029
A9BPAGESELECT8000RW		  Number 002A
A9BPAGESELECT9000RW		  Number 002B
A9BPORTADATARW			  Number 0020
A9BPORTADDRRW			  Number 0022
A9BPORTBDATARW			  Number 0021
A9BPORTBDDRRW			  Number 0023
A9BPORTCDATARW			  Number 0024
A9BPORTCDDRRW			  Number 0026
A9BPORTDDATARW			  Number 0025
A9BPORTDDDRRW			  Number 0027
A9BPROTECTIONOFFR		  Number 0014
A9BPROTECTIONOFFW		  Number 0015
A9BPROTECTIONONW		  Number 0014
A9BSERIALCONTROLW		  Number 008C
A9BSERIALDATARW			  Number 008A
A9BSERIALSLAVEEOIW		  Number 000D
A9BSLAVEDATAR			  Number 0088
A9BSOUNDDATARW			  Number 001A
A9BSOUNDEOIW			  Number 001C
A9BSTARTFLAGCLEARW		  Number 000B
A9BTIMEREOIW			  Number 000C
A9MLCDTYPE			  Number 0008
A9VCC2DELAY			  Number 000A
A9VCC3ONDELAY			  Number 0001
A9VCCPACKSDELAY			  Number 0014
A9VCLKDIV1			  Number 6000
A9VCLKDIV2			  Number 4000
A9VCLKDIV3			  Number 2000
A9VCLKDIV4			  Number 0000
Turbo Assembler	 Version 4.1	    03/17/23 21:49:02	    Page 15
Symbol Table



A9VDUALPAGE1AND2		  Number 0C00
A9VKEYCOL0			  Number 0008
A9VKEYCOLHIGH			  Number 0000
A9VKEYCOLLOW			  Number 0001
A9VLCDPUMP			  Number 0070
A9VLCDPUMPDELAY			  Number 0005
A9VLCDPUMPSOFT			  Number 0010
A9VPACKSPUMPSOFT		  Number 000F
A9VPORTABDDR			  Number 0000
A9VPORTCDDATA			  Number 0F00
A9VPORTCDDDR			  Number 0F00
A9VRAM16MBITS			  Number 0018
A9VRAM1MBITS			  Number 0008
A9VRAM256KBITS			  Number 0000
A9VRAM4MBITS			  Number 0010
A9VSCLKRATEFAST			  Number 0060
A9VSCLKRATEMEDIUM		  Number 0000
A9VSCLKRATESLOW			  Number 0040
A9VSCLKRATESPECIAL		  Number 0020
A9VSINGLEPAGE1			  Number 0000
A9VSINGLEPAGE1AND2		  Number 0800
A9VSINGLEPAGE2			  Number 0400
A9VVHPUMPBAT			  Number 0E00
A9VVHPUMPBATMEDIUM		  Number 0800
A9VVHPUMPBATSOFT		  Number 0400
A9VVHPUMPDC			  Number 2000
A9VVHPUMPDCSOFT			  Number 1000
A9VVHPUMPDELAY			  Number 0064
A9VVOLUMELOW			  Number 00C0
A9WCONTROLRW			  Number 0002
A9WFRC1DATARW			  Number 0012
A9WFRC2DATARW			  Number 001E
A9WLCDCONTROLW			  Number 0006
A9WLCDSIZEW			  Number 0004
A9WNULLFRAMEW			  Number 0084
A9WPORTABDATARW			  Number 0020
A9WPORTABDDRRW			  Number 0022
A9WPORTCDDATARW			  Number 0024
A9WPORTCDDDRRW			  Number 0026
A9WPROTECTIONLOWERW		  Number 0018
A9WPROTECTIONUPPERW		  Number 0016
A9WPUMPCONTROLRW		  Number 002E
A9WRESETWATCHDOGW		  Number 0010
A9WRTCLSWRW			  Number 0080
A9WRTCMSWRW			  Number 0082
A9WSTATUSR			  Number 0004
A9XLCDTYPE			  Number 0F00
A9XRAMDEVICESIZEMASK		  Number 0018
DONTUNDO			  Near	 _TEXT:00E6
DONTUNDO_A9RCTRL		  Near	 _TEXT:0013
DONTUNDO_A9RSTAT		  Near	 _TEXT:0029
DONTUNDO_GP0			  Near	 _TEXT:004A
DONTUNDO_GP1			  Near	 _TEXT:007E
DONTUNDO_GP2			  Near	 _TEXT:00B2
DONTUNDO_MP0			  Near	 _TEXT:0158
DONTUNDO_MP1			  Near	 _TEXT:01AE
DONTUNDO_MP2			  Near	 _TEXT:0204
Turbo Assembler	 Version 4.1	    03/17/23 21:49:02	    Page 16
Symbol Table



DONTUNDO_SP0			  Near	 _TEXT:0063
DONTUNDO_SP1			  Near	 _TEXT:0097
DONTUNDO_SP2			  Near	 _TEXT:00CB
OLDPSEL0			  Word	 DGROUP:0002
OLDPSEL1			  Word	 DGROUP:0004
OLDPSEL2			  Word	 DGROUP:0006
RESETWATCHDOG			  Alias	 A9WRESETWATCHDOGW
SELECTCHANNEL1			  Number 0001
SELECTCHANNEL2			  Number 0002
SELECTCHANNEL3			  Number 0004
SELECTCHANNEL4			  Number 0008
SELECTCHANNEL5			  Number 0010
SS20				  Word	 DGROUP:0000
_ACCESS				  Near	 _TEXT:00CE
_GETA9RCTRL			  Near	 _TEXT:0000
_GETA9RSTAT			  Near	 _TEXT:0016
_GETCS				  Near	 _TEXT:002C
_GETDS				  Near	 _TEXT:002F
_GETPSEL0			  Near	 _TEXT:0032
_GETPSEL1			  Near	 _TEXT:0066
_GETPSEL2			  Near	 _TEXT:009A
_MEMCPY				  Near	 _TEXT:00E9
_MEMCPYPSEL0			  Near	 _TEXT:010D
_MEMCPYPSEL1			  Near	 _TEXT:0163
_MEMCPYPSEL2			  Near	 _TEXT:01B9
_SETPSEL0			  Near	 _TEXT:004D
_SETPSEL1			  Near	 _TEXT:0081
_SETPSEL2			  Near	 _TEXT:00B5

Record Name			  Width	Shift

A9RCHANNELSELECT
 A9MMULTIPLEXENABLE		  01	07
 A9MSERIALCLOCKRATE		  02	05
 A9MPACK5ENABLE			  01	04
 A9MPACK4ENABLE			  01	03
 A9MPACK3ENABLE			  01	02
 A9MPACK2ENABLE			  01	01
 A9MPACK1ENABLE			  01	00
A9RCONTROL
 A9MFRC2IS512KHZOR1KHZ		  01	0F
 A9MFRC2PRESCALE		  01	0E
 A9MFRC1IS512KHZOR1HZ		  01	0D
 A9MFRC1PRESCALE		  01	0C
 A9MSOUNDENABLE			  01	0B
 A9MLCDENABLE			  01	0A
 A9MLOWBATNMIENABLE		  01	09
 A9MDOORNMIENABLE		  01	08
 A9MZEROISGRAYMODE		  01	07
 A9MARMSTANDBY			  01	06
 A9MDISABLEDMADIVIDE		  01	05
 A9MRAMDEVICESIZE		  02	03
 A9MDISABLEMEMWAIT		  01	02
 A9MDISABLEIOWAIT		  01	01
 A9MDISABLECLOCKDIVIDE		  01	00
A9RCONTROLEXTRARW
 A9MSLAVEINTENABLE		  01	0F
Turbo Assembler	 Version 4.1	    03/17/23 21:49:02	    Page 17
Symbol Table



 A9MCLKDIV			  02	0D
 A9MCLOCKENABLE5		  01	0C
 A9MCLOCKENABLE4		  01	0B
 A9MCLOCKENABLE3		  01	0A
 A9MCLOCKENABLE2		  01	09
 A9MCLOCKENABLE1		  01	08
 A9MSOUNDDIR			  01	07
 A9MEXONDISABLE			  01	06
 A9MBUZZFROMFRC1ORTOG		  01	05
 A9MBUZZTOG			  01	04
 A9MKEYCOL			  04	00
A9RINTERRUPTS
 A9MFRC2			  01	07
 A9MFRC1			  01	06
 A9MEXPINTB			  01	05
 A9MEXPINTA			  01	04
 A9MEXPINTC			  01	03
 A9MSLAVE			  01	02
 A9MTIMER			  01	01
 A9MSOUND			  01	00
A9RLCDCONTROL
 A9MLCDMODE			  02	0A
 A9MLCDACLINERATE		  05	05
 A9MLCDPIXELRATE		  05	00
A9RLCDSIZE
 A9MLCDLINELENGTH		  05	0B
 A9MLCDNUMBEROFPIXELS		  0B	00
A9RPORTABDATA
 A9MKEYIDX2			  01	0E
 A9MNICDDETECT			  01	0D
 A9MBATLEVEL2			  01	0C
 A9MBATLEVEL1			  01	0B
 A9MLIBATLEVEL			  01	0A
 A9MKEYIDX1			  01	09
 A9MKEYIDX0			  00	09
 A9MKEYROWX8			  01	08
 A9MCRADLE			  01	07
 A9MKEYROWX			  07	00
A9RPORTCDDATA
 A9MVCCPACKSENABLE		  01	0F
 A9MCODECENABLE			  01	0E
 A9MVCCLCDENABLE		  01	0D
 A9MLCDPANELENABLE		  01	0C
 A9MLCDCONTRAST			  04	08
 A9MVOLUME			  02	06
 A9MREPROENABLE			  01	05
 A9MALTDOORNMIENABLE		  01	04
 A9MAMPLIFIERENABLE		  01	03
 A9MKEYIDENABLE			  01	02
 A9MBUZVOLX			  01	01
 A9MBACKLIGHTENABLEX		  01	00
A9RPUMPCONTROL
 A9MVHPUMPDC			  04	0C
 A9MVHPUMPBAT			  04	08
 A9MLCDPUMP			  04	04
 A9MPUMP2			  04	00
A9RSTATUS
Turbo Assembler	 Version 4.1	    03/17/23 21:49:02	    Page 18
Symbol Table



 A9MCOLD			  01	0F
 A9MPOWERFAIL			  01	0E
 A9MRESET			  01	0D
 A9MNOBATTERY			  01	0C
 A9MFIFOFULL			  01	0B
 A9MSLAVEOVERRUN		  01	0A
 A9MSLAVECONTROLFRAME		  01	09
 A9MSLAVEDATAVALID		  01	08
 A9MKEYBOARD			  01	07
 A9MSLAVECLOCK			  01	06
 A9MMAINSPRESENT		  01	05
 A9MDOORSWITCH			  01	04
 A9MLOWBATNMI			  01	03
 A9MDOORNMI			  01	02
 A9MPROTECTEDMODENMI		  01	01
 A9MWATCHDOGNMI			  01	00

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0008 Word	  Public  DATA
_TEXT				  16  020F Word	  Public  CODE
